@model ProjectManager.Models.TaskList

@{
    ViewBag.Title = "Create";
}

<h2>Add Task</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProjectList.Project, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Project", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProjectList.Project, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Task, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Task, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.isParentTask, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label class="control-label col-md-2">Parent Task</label>
        <div class="col-md-10">
            <input type="checkbox" id="chkParentTask" class="form-control checkbox-inline"/>
            @Html.HiddenFor(model => model.isParentTask, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.isParentTask, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="range" min="0" max="30" id="myRange" value="0" />
            <span id="ShowPriority">0</span>
            @Html.HiddenFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParentTask.Parent_Task, "Parent_Task", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Parent_Task", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Parent_Task, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @id = "Start_Date", @class = "form-control", type = "date", placeholder = "MM/DD/YYYY" } })
            @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
            <span id="startDateValidation" style="visibility:hidden" class="field-validation-error text-danger" data-valmsg-for="Project" data-valmsg-replace="true">Start Date can not be grater than end date.</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @id = "End_Date", @class = "form-control", type = "date", placeholder = "MM/DD/YYYY" } })
            @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Task" class="btn btn-default" id="btnAddTask" />
            <input type="submit" value="Reset" class="btn btn-default" id="btnReset" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>

<script type="text/javascript">
    
    $(document).ready(function () {
        $("#chkParentTask").click(function () {            
            document.getElementById("isParentTask").value = $("#chkParentTask")[0].checked;
        });

        //$(".chkParentTask input[type='checkbox']").each(function () {
        //    if (this.checked)
        //        document.getElementById("isParentTask").value = true;
        //    else
        //        document.getElementById("isParentTask").value = false;
        //});

        $("#myRange").click(function () {
            document.getElementById("ShowPriority").innerHTML = this.value;
            document.getElementById("Priority").value = this.value;
        });

        $("#Start_Date").click(function () {
            document.getElementById("startDateValidation").style.visibility = "hidden";
        });

        $("#btnReset").click(function () {
            event.preventDefault();
            document.getElementById("myRange").value = "0";
            //document.getElementById("Project").value = "";
            document.getElementById("Start_Date").value = "";
            document.getElementById("End_Date").value = "";
            document.getElementById("Priority").value = "0";
            document.getElementById("ShowPriority").innerHTML = "0";
            document.getElementById("Task").value = "";
            //document.getElementById("Parent_Task").value = "";
        });

        $("#btnAddTask").click(function () {
            if (document.getElementById("isParentTask").value == "")
                document.getElementById("isParentTask").value = false;
            document.getElementById("Priority").value = document.getElementById("myRange").value;
            if (document.getElementById("Start_Date").value > document.getElementById("End_Date").value && !document.getElementById("isParentTask").value) {
                document.getElementById("startDateValidation").style.visibility = "visible";
                event.preventDefault();
            }

        });

    });

</script>